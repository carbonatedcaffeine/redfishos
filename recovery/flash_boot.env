#!/bin/sh
# bash or ash or dash is required but sh for universal compatibility.
################################################################################
#
# Copyright (C) 2023, Roberto A. Foglietta <roberto.foglietta@gmail.com>
#                     Released under GPLv2 license terms
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# version 2 as published by the Free Software Foundation
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
################################################################################
# release: 0.0.4

BOOT_IMAGE_PATH="~roberto/j/rfos-boot-image.img"

ssh_flash_boot_a() {
	local ret fimg=${1:-$BOOT_IMAGE_PATH}
	local ddcmd='dd bs=1M iflag=fullblock conv=sync,fsync of=/dev/mmcblk0p'
	local sycmd='echo err=$?; sync; echo s > /proc/sysrq-trigger; 
                 echo 3 >/proc/sys/vm/drop_caches; sync'
	time dd bs=1484 iflag=fullblock if=$fimg | afish "${ddcmd}42; $sycmd"
	#afish "${ddcmd}42 && ${ddcmd}43 if=/dev/mmcblk0p42; $sycmd"
	ret=$?; echo; return $ret
}

sftp_flash_boot_a() {
	afish getip
	local d=.uploads fimg=${1:-$BOOT_IMAGE_PATH}
	local ret t=$d/.tmp.img f=$d/boot_a.img
	time echo -e "put $fimg $t \n rename $t $f \n quit" |\
		sshpass -p recovery sftp root@$sfos_ipaddr
	ret=$?; echo; return $ret
}

flash_boot_a() {
	local ret output fimg=${1:-~roberto/j/rfos-boot-image.img}
	echo "=> netcat boot_a image transfer starting..."
	output=$({ time netcat -q 0 -n 10.42.66.66 1234 < $fimg; } 2>&1)
	ret=$?
	echo "$output" | grep real | tr -s '\t' ' ' |\
		sed -e "s/^/  |  execution time /"
	echo -e "  \_ netcat returns status: $ret\n"
	return $ret
}

fast_boot_a() {
	local fimg=${1:-$BOOT_IMAGE_PATH}
	fastboot flash:raw boot_a $fimg
	fastboot reboot
}
