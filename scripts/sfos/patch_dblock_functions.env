#!/usr/bin/env
################################################################################
#
# Copyright (C) 2023, Roberto A. Foglietta <roberto.foglietta@gmail.com>
#                     Released under GPLv2 license terms
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# version 2 as published by the Free Software Foundation
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
################################################################################
# release: 0.0.3

# LOCK FUNCTIONS ###############################################################
#
# RAF: just if flock is missing and moreover this prints customised messages
#

export lockfile=""

rmdb_lock() {
    test -n "$lockfile" || return 1
    rm -f "$(readlink -f $lockfile)" "$lockfile"
}

mkdb_lock() {
    test -n "$lockfile" || return 1

    local i pid cmdline tmpfile=$(mktemp -p "${TMPDIR:-/tmp}" -t lock.XXXXXX)
    test -e "$tmpfile" && echo "$$" >"$tmpfile"

    for i in $(seq 1 10); do
        if test -s "$tmpfile" \
        && ln -s "$tmpfile" "$lockfile" 2>/dev/null; then
            return 0
        else
            pid=$(cat "$lockfile")
            if [ "$pid" = "$$" ]; then
                echo -e "\nWARNING: multiple attempts to lock database.\n"
                return 0
            fi >&2
            cmdline=$(cat "/proc/$pid/cmdline" 2>/dev/null | tr '\0' ' ' ||:)
            if [ -n "$pid" -a -n "$cmdline" ]; then
                echo -e "\nERROR: patches database is locked by pid: $pid.\n"
                return 1
            fi >&2
            rmdb_lock
        fi
    done

    echo -e "\nERROR: cannot lock the patches database, abort.\n" >&2
    return 1
}

