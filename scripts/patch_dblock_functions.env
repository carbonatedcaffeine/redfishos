#!/usr/bin/env
################################################################################
#
# Copyright (C) 2023, Roberto A. Foglietta
#     Contact: roberto.foglietta@gmail.com
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# version 2 as published by the Free Software Foundation
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
################################################################################
# release: 0.0.1

# LOCK FUNCTIONS ###############################################################
#
# RAF: just if flock is missing and moreover this prints customised messages
#

export lockfile="${1:-${patch_db}.lck}"

rmdb_lock() {
	rm -f "$(readlink -f $lockfile)" "$lockfile"
}

mkdb_lock() {
	local i pid cmdline tempfile=$(mktemp -p "${TMPDIR:-/tmp}" -t lock.XXXX)
	test -e "$tempfile" && echo "$$" >"$tempfile"
	
	for i in $(seq 1 10); do
		if test -s "$tempfile" \
		&& ln -s "$tempfile" "$lockfile" 2>/dev/null; then
			return 0
		else
			pid=$(cat "$lockfile")
			if [ "$pid" = "$$" ]; then
				echo "\nWARNING: multiple attempts to lock database.\n"
				return 0
			fi >&2
			cmdline=$(cat "/proc/$pid/cmdline" 2>/dev/null | tr '\0' ' ' ||:)
			if [ -n "$pid" -a -n "$cmdline" ]; then
				printf "\nERROR: patches database is locked by pid: %d." $pid
				echo -e "\n"
				return 1
			fi >&2
			rmdb_lock
		fi
	done
	echo "\nERROR: cannot lock the patches database, abort.\n"
	return 1
}

